---
A. Docker 


1.
docker-file에서 mysql을 database으로 네이밍한게 application.yml에서 
url: jdbc:mysql://database:3306/book?autoReconnect=true&useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8 #여기서 database는 docker-compose에서 mysql을 database라고 칭한 것.
고대로 쓰인다


2.
docker-compose에서 network: 로 하나로 묶어야 backend에서 database랑 통신할 때랑, 
frontend에서 ajax를 localhost:8080으로 던질 때, 에러가 나지 않는다.
물론 실전에서는 프론트용 서버, 백엔드용 서버, 디비용 서버로 나눈 다음 통신해야 될지 싶다.



3. docker compose up으로 이미지 생성한 후,
프론트 단에서 코드 바꾸고, 다시 down ,up 해도 코드가 업데이트 되지 않았다.
그냥 기존 이미지에 스냅샷 쓴 듯 하다.

그러니 코드 바꿨으면 예전에 만들었던 이미지 삭제 후 다시 docker compose up 해주는게 좋다.





---
B. react app 분석

Q1. 구조

src/
    components/
        header
        bookItem
    pages/
        books/
        user/

header랑 bookItem 컴포넌트 별도 관리하고, 
pages는 book관련 따로, user관련 따로 관리하네?



Q2. Router

index.js에서 <BrowserRouter> 로 감싸네?
하위에 App.js에서 <Route path="/saveForm" exact={true} component={SaveForm} /> 로 어느 path에 어느 컴포넌트(페이지)로 보낼지 처리하네?


<Container>안에 Router안 내용만 바뀌고 url만 바뀌는 것 처럼 보이지, header나 다른 html은 고정되 있고, 내용물만 바뀌는 듯?
이게 spa인가? single page app?


header.js에서 App.js에서 router에서 설정한걸 GET으로 보내는걸 <Link>로 해놓았네?


Q3. react-bootstrap

header에서 react-bootstrap이 있네?
bootstrap은 react에서도 열일하네 ㅋㅋ


Q4. home page 

useEffect가 뭐지?
useEffect() 안에 정의된 함수 fires everytime document re-renders

useEffect(() => {}, [param]); 에서 [param]이 바뀔 때마다, useEffect 안에 함수를 re-run 


fetch해서 가져온 book 정보가 그려지면 다시 re-render하는 형태네?
무한 스크롤도 이걸로 만드나보네


Q5. props?

Detail.js에서 props를 받는데 App.js를 보면 router에 Detail에 파라미터 넣는게 없는데?

console.log(props); 찍어보니까 history, location, match 등이 들어있네?

그냥 props.history.push('/') 했는데 main page로 re-direct 해주네?


state vs props 쳐봤더니,
state는 바뀌면 dom을 re-render해주는데
props는 바뀌어도 re-render 안하네?





---
C. springboot app 분석


Q1. application.yml에서 db 나누기

8081포트는 dev용으로 h2 붙여놓고
8080포트는 production용으로 mysql 붙여놨네


Q2. cors filter 

프론트에서 요청을 ajax로 보내니까, 이거 허용해주려고 
corsFilter에서 cors 모든 요청 허용한 듯?

